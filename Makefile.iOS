NAME=CompositeOperations
XCODEPROJ=DevelopmentApp/DevelopmentApp.xcodeproj
CONFIGURATION=Release
SCHEME=CompositeOperations-iOS
SIMULATOR='platform=iOS Simulator,name=iPhone 6s Plus'

FRAMEWORK_FOLDER=$(NAME).framework

### Paths

BUILD_PATH=$(PWD)/Build
BUILD_PATH_SIMULATOR=$(BUILD_PATH)/$(CONFIGURATION)-iphonesimulator
BUILD_PATH_IPHONE=$(BUILD_PATH)/$(CONFIGURATION)-iphoneos
BUILD_PATH_UNIVERSAL=$(BUILD_PATH)/$(CONFIGURATION)-universal
BUILD_PATH_UNIVERSAL_FRAMEWORK_FOLDER=$(BUILD_PATH_UNIVERSAL)/$(FRAMEWORK_FOLDER)
BUILD_PATH_UNIVERSAL_FRAMEWORK_BINARY=$(BUILD_PATH_UNIVERSAL_FRAMEWORK_FOLDER)/$(NAME)

DISTRIBUTION_PATH=$(PWD)/Distribution
ZIPBALL_NAME=$(NAME)-iOS.zip
ZIPBALL_PATH=$(DISTRIBUTION_PATH)/$(ZIPBALL_NAME)

### Colors

RESET=\033[0;39m
RED=\033[0;31m
GREEN=\033[0;32m

### Actions

.PHONY: default archive clean test build validate zip

default: test

archive: test build validate zip

test:
	xcodebuild -project $(XCODEPROJ) \
                   -scheme $(SCHEME) \
                   -sdk iphonesimulator \
                   -destination $(SIMULATOR) \
                   clean test

build:
	xcodebuild -project $(XCODEPROJ) \
                   -scheme $(SCHEME) \
                   -sdk iphonesimulator \
                   -destination $(SIMULATOR) \
                   -configuration $(CONFIGURATION) \
                   CONFIGURATION_BUILD_DIR=$(BUILD_PATH_SIMULATOR) \
                   clean build

	xcodebuild -project $(XCODEPROJ) \
                   -scheme $(SCHEME) \
                   -sdk iphoneos \
                   -configuration $(CONFIGURATION) \
                   CONFIGURATION_BUILD_DIR=$(BUILD_PATH_IPHONE) \
                   clean build

	rm -rf $(BUILD_PATH_UNIVERSAL)
	mkdir -p $(BUILD_PATH_UNIVERSAL)

	cp -Rv $(BUILD_PATH_IPHONE)/$(FRAMEWORK_FOLDER) $(BUILD_PATH_UNIVERSAL) 

	lipo $(BUILD_PATH_SIMULATOR)/$(FRAMEWORK_FOLDER)/$(NAME) $(BUILD_PATH_IPHONE)/$(FRAMEWORK_FOLDER)/$(NAME) -create -output $(BUILD_PATH_UNIVERSAL_FRAMEWORK_BINARY)

validate: validate.i386 validate.x86_64 validate.armv7 validate.arm64

validate.%:
	@printf "Validating $*... "
	@lipo -info $(BUILD_PATH_UNIVERSAL_FRAMEWORK_BINARY) | grep -q '$*' && echo "$(GREEN)Passed$(RESET)" || (echo "$(RED)Failed$(RESET)"; exit 1)

zip:
	mkdir -p $(DISTRIBUTION_PATH)
	cd $(BUILD_PATH_UNIVERSAL) && zip -r -FS $(DISTRIBUTION_PATH)/$(ZIPBALL_NAME) $(FRAMEWORK_FOLDER)

clean:
	rm -rf $(BUILD_PATH)
	rm -rf $(DISTRIBUTION_PATH)

